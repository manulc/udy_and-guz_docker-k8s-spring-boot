apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql8
data:
  db_name: msvc_usuarios
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres14
data:
  db_name: msvc_cursos
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: msvc-usuarios
data:
  application.yaml: |-
    server:
      port: 8001
    spring:
      datasource:
        url: jdbc:mysql://mysql8:3306/msvc_usuarios
        driver-class-name: com.mysql.cj.jdbc.Driver
      jpa:
        database-platform: org.hibernate.dialect.MySQL8Dialect
    # Desactivamos la validación de Hibernate(Activada por defecto y se ejecuta automáticamente justo antes de añadir o
    # actualizar una entidad en la base de datos). Ésto lo hacemos porque en este caso estamos usando la clase Usuario
    # como clase Entidad y como DTO(Mala práctica) y, por lo tanto, se ejecutan 2 validaciones; la de Spring(mediante
    # la anotación @Valid) y la de Hibernate, pero solo nos intenera la validación de Spring.
        properties:
          javax.persistence.validation.mode: none
    # Para la generación automática de las tablas en la base de datos
    # Otra opción es usar la propiedad de Hibernate "spring.jpa.hibernate.ddl-auto"(Los valores pueden ser;create, update,
    # create-drop, validate y none)
        generate-ddl: true
      security:
        oauth2:
          resourceserver:
            jwt:
              issuer-uri: http://msvc-auth:9000
    management:
      endpoints:
        web:
          exposure:
            include: "*"
      endpoint:
        health.show-details: always
        probes:
          enabled: true
      health:
        livenessstate:
          enabled: true
        readinessstate:
          enabled: true
    # Para mostrar las consultas y sentencias SQL generadas
    # Otra opción es usar la propiedad "spring.jpa.show-sql" con valor true
    logging:
      level:
        org.hibernate.SQL: debug
    config:
      texto: Configurando ambiente por defecto
    ---
    spring:
      config:
        activate:
          on-profile: dev
    config:
          texto: Configurando ambiente de desarrollo
    ---
    spring:
      config:
        activate:
          on-profile: prod
    config:
          texto: Configurando ambiente de producción
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: msvc-cursos
data:
  server.port: "8002"
  spring.datasource.url: jdbc:postgresql://postgres14:5432/msvc_cursos
  spring.datasource.driverClassName: org.postgresql.Driver
  # Funciona para la versión 10 de PostgreSQL y para versiones posteriores
  spring.jpa.database-platform: org.hibernate.dialect.PostgreSQL10Dialect
  # Para la generación automática de las tablas en la base de datos
  # Otra opción es usar la propiedad "spring.jpa.generate-ddl"(Los valores pueden ser;true o false)
  spring.jpa.hibernate.ddl-auto: update
  # Para mostrar las consultas y sentencias SQL generadas
  # Otra opción es usar la propiedad "logging.level.org.hibernate.SQL" con valor debug
  spring.jpa.show-sql: "true"
  #spring.cloud.kubernetes.discovery.all-namespaces: "true"
