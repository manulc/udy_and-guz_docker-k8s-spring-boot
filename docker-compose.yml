version: "3.9"
services:
  msvc-usuarios:
    # Para que use este nombre en lugar del nombre por defecto que crea Docker Compose usando el nombre del directorio
    # como prefijo
    container_name: msvc-usuarios
    image: manulc/msvc-usuarios:v1
    build:
      context: .
      dockerfile: msvc-usuarios/Dockerfile
    ports:
      - "8001:8001"
    env_file: ./msvc-usuarios/.env
    # Para que este servicio pueda volver a intentar conectarse con la base de datos MySQL en caso de que se inicie
    # antes que ella
    restart: always
    depends_on:
      - mysql8
    networks:
      - spring
  msvc-cursos:
    container_name: msvc-cursos
    image: manulc/msvc-cursos:v1
    build:
      context: .
      dockerfile: msvc-cursos/Dockerfile
    ports:
      - "8002:8002"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    # Para que este servicio pueda volver a intentar conectarse con la base de datos PostgreSQL en caso de que se inicie
    # antes que ella
    restart: always
    depends_on:
      - postgres14
    networks:
      - spring
  mysql8:
    container_name: mysql8
    image: mysql:8
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: msvc_usuarios
    volumes:
      - data-mysql:/var/lib/mysql
    networks:
      - spring
  postgres14:
    container_name: postgres14
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=root
      - "POSTGRES_DB=msvc_cursos"
    volumes:
      - data-postgres:/var/lib/postgresql/data
    networks:
      - spring
volumes:
  data-mysql:
    # Para que use este nombre en lugar del nombre por defecto que crea Docker Compose usando el nombre del directorio
    # como prefijo
    name: data-mysql
  data-postgres:
    name: data-postgres
networks:
  spring:
    # Para que use este nombre en lugar del nombre por defecto que crea Docker Compose usando el nombre del directorio
    # como prefijo
    name: spring
    external: true